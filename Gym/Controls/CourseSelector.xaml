<UserControl x:Class="Gym.Controls.CourseSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:VM="clr-namespace:Gym.ViewModels"
             xmlns:local="clr-namespace:Gym.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:Gym.Domain"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DesignHeight="200" d:DesignWidth="200">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <domain:NotConverter x:Key="NotConverter" />
    </UserControl.Resources>
    <Grid>
        <!--<DataGrid
            x:Name="dgCourses"
	        Margin="0,8,0,0"
	        materialDesign:DataGridAssist.CellPadding="13 8 8 8"
	        materialDesign:DataGridAssist.ColumnHeaderPadding="8"
	        AutoGenerateColumns="False"
	        CanUserAddRows="False"
	        CanUserSortColumns="True"
	        ItemsSource="{Binding Courses}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsSelected}"
			EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
			ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                    <DataGridCheckBoxColumn.Header>
                        -->
        <!--  padding to allow hit test to pass thru for sorting  -->
        <!--
                        <Border
					Padding="6,0,6,0"
					HorizontalAlignment="Center"
					Background="Transparent">
                            <CheckBox
						HorizontalAlignment="Center"
						DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
						IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name}"
                     IsReadOnly="True"
			EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
			Header="نام دوره" />
                <DataGridTextColumn Binding="{Binding Price}"
                    IsReadOnly="True"
			EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
			Header="هزینه" />
                -->
        <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->
        <!--
                <materialDesign:MaterialDataGridComboBoxColumn
			Header="مربی"
                    ItemsSourceBinding="{Binding Path=Id}"
			SelectedValueBinding="{Binding MentorId}" />
            </DataGrid.Columns>
        </DataGrid>-->
        <!--<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">-->
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <ItemsControl x:Name="CourseList" FlowDirection="RightToLeft"
	Grid.IsSharedSizeScope="True"
	ItemsSource="{Binding Courses.Items, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type VM:CourseVM}">
                        <Border
				x:Name="Border"
				Padding="8"
				BorderBrush="{DynamicResource MaterialDesignDivider}"
				BorderThickness="0,0,0,0">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="1.7*"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox IsChecked="{Binding IsSelected}"  
                                          Checked="CheckBox_Checked" 
                                          IsEnabled="{Binding IsReadonly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NotConverter}}" 
                                          IsTabStop="{Binding IsReadonly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NotConverter}}"
                                          Unchecked="CheckBox_Checked" 
                                    Grid.Column="0"
                                    Padding="0,0,0,0"
                                          Margin="10,0,0,9"
                                    VerticalAlignment="Bottom"/>
                                <TextBox Text="{Binding Name}" 
                                    Grid.Column="1" IsTabStop="False"
                                    Padding="0,0,0,3"
                                    IsReadOnly="True"/>
                                <local:NumberBox Text="{Binding Price, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Padding="8,0,0,3" IsTabStop="False" ThousandSeparate="True"
                                  Style="{StaticResource MaterialDesignTextBox}"
                                                 Grid.Column="2"
                                    IsReadOnly="True"/>
                                <ComboBox SelectedValue="{Binding MentorId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    FlowDirection="LeftToRight"
                                    Padding="8,0,0,10"
                                    Grid.Column="3" 
                                      IsHitTestVisible="{Binding IsReadonly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NotConverter}}" 
                                      IsTabStop="False" 
	                                  VerticalAlignment="Bottom"
	                                  ItemsSource="{Binding Mentors}"
                                      DisplayMemberPath="Name"
                                      SelectedValuePath="Id"
                                      Style="{StaticResource MaterialDesignComboBox}"
                                      IsEditable="False"
	                                  >
                                    <ComboBox.SelectedItem>
                                        0
                                    </ComboBox.SelectedItem>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <StackPanel Orientation="Horizontal"  
                                                         Grid.Column="5" 
                                                         VerticalAlignment="Bottom">
                                    <materialDesign:PackIcon Kind="Star" Foreground="Gold" Margin="8,0,0,0"
                                                             Visibility="{Binding Path=IsVIP, Converter={StaticResource BoolToVis}}">
                                    </materialDesign:PackIcon>
                                </StackPanel>
                                <!--<Button Click="Button_Click">Test</Button>-->
                                <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->

                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </ScrollViewer>
        <!--</ScrollViewer>-->
    </Grid>
</UserControl>
